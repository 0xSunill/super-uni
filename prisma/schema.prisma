// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       String @id @default(uuid())
  username String @unique
}

model Student {
  id          String       @id @default(uuid())
  rollNo      String       @unique
  name        String
  email       String       @unique
  department  Department
  year        Year         @relation(fields: [yearId], references: [id])
  yearId      String
  phone       String?      @unique
  gender      Gender
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  marks       Mark[]
  attendances Attendance[]
  subjects    Subject[]
  wallets     Wallet[]
  @@index([rollNo])
}

model Wallet {
  id        String   @id @default(uuid())
  address   String   @unique
  currency  String   @default("USDC")
  balance   Float    @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  teacher   Teacher? @relation(fields: [teacherId], references: [id])
  teacherId String?

  student   Student? @relation(fields: [studentId], references: [id])
  studentId String?
}

model Teacher {
  id         String       @id @default(uuid())
  name       String
  email      String       @unique
  department Department
  phone      String?      @unique
  experience Int?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  subjects Subject[]
  lessons  Lesson[]
  wallets  Wallet[]
}

model Attendance {
  id        String    @id @default(uuid())
  studentId String
  subjectId String
  date      DateTime
  status    AttStatus

  student Student @relation(fields: [studentId], references: [id])
  subject Subject @relation(fields: [subjectId], references: [id])

  @@unique([studentId, subjectId, date])
  @@index([date])
}

model Mark {
  id        String   @id @default(uuid())
  studentId String
  subjectId String
  score     Int
  date      DateTime @default(now())

  student Student @relation(fields: [studentId], references: [id])
  subject Subject @relation(fields: [subjectId], references: [id])

  @@index([studentId])
  @@index([subjectId])
}

model Year {
  id       String    @id @default(uuid())
  year     Int       @unique
  students Student[]
  subjects Subject[]
}

model Subject {
  id         String     @id @default(uuid())
  code       String     @unique
  name       String
  department Department
  yearId     String

  teachers    Teacher[]
  students    Student[]
  attendances Attendance[]
  marks       Mark[]
  year        Year         @relation(fields: [yearId], references: [id])
  lessons     Lesson[]

  @@index([code])
}

model Lesson {
  id        String   @id @default(uuid())
  subjectId String
  day       Day
  startTime DateTime
  endTime   DateTime
  room      String?

  subject   Subject  @relation(fields: [subjectId], references: [id])
  teacher   Teacher? @relation(fields: [teacherId], references: [id])
  teacherId String?

  @@index([subjectId, day])
}

model Announcement {
  id        String   @id @default(uuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Gender {
  MALE
  FEMALE
}

enum Department {
  MCA
  MSC
  OTHERS
}

enum Day {
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
}

enum AttStatus {
  CANCELLED
  ABSENT
  PRESENT
}
